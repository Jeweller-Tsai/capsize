#!/usr/local/bin/ruby

require 'yaml'
require 'cgi'

# These are the Rubyforge config values.  Change as needed.
SVNLOOK    = '/usr/local/bin/svnlook'
CURL       = '/usr/bin/curl'
LOG_FILE   = '/tmp/svn-hooks.log'
LOG_PREPEND = '\n-{2}'

# Configuration
# Set your basecamp url, username, password and project id here.
@basecamp_url = ""
@basecamp_username = "subversion"
@basecamp_password = ""
# project and category should specify the ID number and not a name
@basecamp_project = ""
@basecamp_project_category = ""

def swap_word(abr)
  case abr
  when 85
    "Updated"
  when 65
    "Added"
  when 68
    "Deleted"
  end
end

def gather_and_post(repo_path, revision)

  commit_author  = `#{SVNLOOK} author #{repo_path} -r #{revision}`.chop
  commit_log     = `#{SVNLOOK} log #{repo_path} -r #{revision}`.strip
  commit_date    = `#{SVNLOOK} date #{repo_path} -r #{revision}`
  commit_changed = `#{SVNLOOK} changed #{repo_path} -r #{revision}`.strip

  commit_log_textilized = ""
  commit_log.split(%r{#{LOG_PREPEND}}).collect do |log_item|
    commit_log_textilized << "* #{commit_log.gsub(/-/,'').gsub(/\n/,'<br/>').capitalize}\n"
  end

  commit_changed_textilized = ""
  commit_changed.each_line do |line|
    matches = line.match(/^\w\s+(.*)/)
    unless matches.nil?
      file_status = swap_word(matches[0][0])
      commit_changed_textilized << "* <small>*#{file_status}:*</small> <code>#{matches[1]}</code>\n"
    end
  end

  changeset_xml = <<-END_XML
<request>
  <post>
    <category-id>#{@basecamp_project_category}</category-id>
    <title>#{CGI.escapeHTML("%s committed changeset [%d]" % [commit_author, revision])}</title>
    <body>


h2. Committed by : 

@#{CGI.escapeHTML(commit_author)} at #{CGI.escapeHTML(commit_date)}@

h2. Commit log message :

#{CGI.escapeHTML(commit_log_textilized)}

    </body>
    <extended-body>

h2. Commit changed :

#{CGI.escapeHTML(commit_changed_textilized)}

h2. Project Source Viewer:

"View source for amazon-ec2 gem":http://viewvc.rubyforge.mmmultiworks.com/cgi/viewvc.cgi/?root=amazon-ec2
"View source for capsize gem":http://viewvc.rubyforge.mmmultiworks.com/cgi/viewvc.cgi/?root=capsize

    </extended-body>
    <use-textile>1</use-textile>
  </post>
</request>
END_XML
  
  url = "#{@basecamp_url}/projects/#{@basecamp_project}/msg/create"
  
  cmd = "#{CURL} --silent -H 'Accept: application/xml' -H 'Content-Type: application/xml' -u #{@basecamp_username}:#{@basecamp_password} -d '#{changeset_xml.gsub(/'/, "\\'").strip}' #{url}"
  
  %x{#{cmd}}

end

begin
  gather_and_post ARGV[0], ARGV[1]
rescue
  %x{echo "repo:#{ARGV[0]} rev: #{ARGV[1]}" > #{LOG_FILE}}
  %x{echo "Error: #{$!} trace:#{caller}" >> #{LOG_FILE}}
end
