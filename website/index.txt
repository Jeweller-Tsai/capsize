h2. Capsize : The Capistrano Plugin for EC2

h2. &#x2192; 'capsize'

h2. About

Amazon Web Services offers a compute power on demand capability known as the Elastic Compute Cloud (EC2).  Using the current API's the compute resources in the cloud can be provisioned on demand by making SOAP or HTTP Query API calls to EC2.

<b>Legal Stuff : This project is in no way affiliated nor does it represent Amazon.com, Amazon Web Services, or the Amazon Web Services Elastic Compute Cloud service.</b>

This gem provides a plugin for the fantastic "Capistrano 2":http://www.capify.org/ deployment and server management tool written by Jamis Buck.  With this gem, and Capistrano installed, you will be able to issue commands and script your interaction with Amazon's Elastic Compute Cloud (EC2) service.  This gem depends on the installation of the newly updated "amazon-ec2":http://amazon-ec2.rubyforge.org/ Ruby Gem which is an interface library that can be used to interact with the Amazon EC2 system.

h2. Project Info

This project is managed as a RubyForge project which you can find at "http://capsize.rubyforge.org/":http://capsize.rubyforge.org/ and this is always the best place to find the latest news, report any bugs, submit feature requests, or provide patches.

h2. Documentation

You can browse the complete RDoc generated documentation at:

"http://capsize.rubyforge.org/rdoc/":http://capsize.rubyforge.org/rdoc/


h2. Installing

This gem follows the standard conventions for installation on any system with Ruby and RubyGems installed.  If you have worked with gems before this will look very familiar.

h3. Installation pre-requisites

Before you can make use of this gem you will need an "Amazon Web Services developer account":https://aws-portal.amazon.com/gp/aws/developer/registration/index.html.  This account must also be specifically enabled for Amazon EC2 usage.  AWS will provide you with an 'AWS Access Key ID' and a 'Secret Access Key' which will allow you to authenticate any API calls you make and ensure correct billing to you for usage of the service.  Take note of these (and keep them secret!).

h3. Installing the gem

Linux / OS X : <pre syntax="ruby">sudo gem install capsize --include-dependencies</pre>

Microsoft Windows : <pre syntax="ruby">gem install capsize --include-dependencies</pre>

Note : This gem has a number of dependencies for runtime and testing.  It is recommended that you choose 'Y' to install dependencies when asked by the gem install tool (unless you passed in the --include-dependencies command which will take care of that automatically).

h2. Getting Started

For the purposes of this guide we'll assume you followed the steps in the 'Installing the gem' section above and know how to create a new Ruby on Rails application.  We'll also assume that you have installed Capistrano 2.x properly in that Rails application and have done at least the initial steps for setting up Capistrano (and most importantly have set the Capistrano :application name in deploy.rb).

cd into the RAILS_ROOT of your project

Edit the file config/deploy.rb and find something like the following:


<pre syntax="ruby">
set :application, "foobar"
</pre>

IMPORTANT : Ensure that the "require 'capsize'" line comes AFTER the line in your configuration where you set your application name.  Capsize will not work properly if this is not done!  Now add this:

<pre syntax="ruby">

# #################################################################
# CAPSIZE CONFIG SETTINGS
# #################################################################

# Include the Capsize EC2 'cap' tasks
# WARNING : This must be placed in your deploy.rb file anywhere 
# AFTER the line where you set your application name!  Looks like:
#   set :application, "foobar".
# The application name is used by Capsize and the order matters!
require 'capsize'

# Uncomment to override the standard capsize config dir
# used for standard config info.
#set :capsize_config_dir, 'config/capsize'

# Uncomment to override location used to store a 
# secure config file with your AWS credentials,
# and EC2 private keypair information.
#set :capsize_secure_config_dir, 'config/capsize'

# Uncomment to override the actual config file names 
# that are stored in the config dirs noted above.
#set :capsize_config_file_name, 'capsize.yml'
#set :capsize_secure_config_file_name, 'secure.yml'

</pre>

If you are picky about the location of your configuration files for Capsize feel free to modify the variables shown in the sample above to suit your environment.  The defaults should be fine for most.  It is easiest if you decide now and modify the file before we create your config in the following steps.

Once the Capsize section of deploy.rb is just how you'd like it you should be able to run 'cap -T' to show all available Capistrano commands:

<pre syntax="ruby">
# cap -T
...
cap ec2:console:output                             # Show instance console output.
cap ec2:images:describe                            # Describe machine images you...
cap ec2:instances:describe                         # Info about your instances.
cap ec2:instances:reboot                           # Reboot an EC2 instance.
cap ec2:instances:run                              # Runs an instance of :image_...
cap ec2:instances:ssh                              # Open an SSH shell to instan...
cap ec2:instances:terminate                        # Terminate an EC2 instance.
cap ec2:keypairs:create                            # Create and store a new keyp...
cap ec2:keypairs:delete                            # Delete a keypair.
cap ec2:keypairs:describe                          # Describes your keypairs.
cap ec2:security_groups:authorize_ingress          # Authorize firewall ingress ...
cap ec2:security_groups:create                     # Create a security group.
cap ec2:security_groups:create_with_standard_ports # in deploy.
cap ec2:security_groups:delete                     # Delete a security group.
cap ec2:security_groups:revoke_ingress             # Revoke firewall ingress for...
cap ec2:setup                                      # Initialize the Capsize conf...
...
</pre>

You should now see a group of tasks that start in the namespace 'ec2:' similar to what you see above.

Finally, run the following Capsize command which will generate your initial Capsize config files and show you a help document that will take you through the remaining configuration steps and get you up and running with your first Capsize controlled EC2 instance.

<pre syntax="ruby">
cap ec2:setup
</pre>

Enjoy!

h3. Related Project Websites

"http://aws.amazon.com/":http://aws.amazon.com/

"http://amazon-ec2.rubyforge.org/":http://amazon-ec2.rubyforge.org/

"http://capsize.rubyforge.org/":http://capsize.rubyforge.org/

"Capistrano 2":http://www.capify.org/

h3. Project Tools

"Project Home":http://rubyforge.org/projects/capsize/
"Downloads":http://rubyforge.org/frs/?group_id=3853
"Browse Code":http://rubyforge.org/scm/?group_id=3853
"Report Bugs":http://rubyforge.org/tracker/?group_id=3853
"Request Features":http://rubyforge.org/tracker/?group_id=3853
"Submit Patches":http://rubyforge.org/tracker/?group_id=3853


h2. Credits

The original version of this Capistrano plugin gem (Capazon) was written by Jesse Newland .  Jesse got off to a fantastic start, especially considering the pretty limited functionality of the original 'amazon-ec2' gem library (I can say that since I wrote the first version based on Amazon Web Services sample code).  Jesse has graciously allowed me to run with a lot of changes and deprecate the original gem.  Unfortunately the name change was necessitated by a cease and desist letter from a certain company that shall remain unnamed.  We are excited to have Jesse's help on the transition, code contributions, and helping to set the future direction of the Capsize gem.
 
h2. Contact

Comments, patches, and bug reports are very welcome. Please send an email to the address below or use the RubyForge forum for this project.
